@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.NewsPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.PublishedContent;
@{
    Layout = "LayoutWithBreadcrumb.cshtml";

    var itemsPerPage = 9;
    var pageNumber = 1;

    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
        pageNumber = 1;

    var selection = Umbraco.Content(Guid.Parse("a174bb16-eec6-4eb3-9f21-c01bfd609207"))?
        .ChildrenOfType("newsItemPage")?
        .Where(x => x.IsVisible())
        .OrderByDescending(x => x.CreateDate).ToList();

    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);

    
}

    <!-- article list section -->
    <section class="article-list">
        <div class="container">
            <h3>Our News & Articles</h3>
            <div class="card-list">
                
    

            
            @if(pagedItems != null)
            {
                @foreach (var item in pagedItems)
                {
                    var url = item.Url();
                    var date = item.CreateDate;
                    var image = item.Value<IPublishedContent>("newsImage");
                    var category = item.Value("newsCategory");
                    var title = item.Name();
                    var preamble = item.Value("newsPreamble");


                    <a href="@url" class="card">
                        <img src="@image?.Url()" alt="...">
                        <div class="card-body">
                            <p>@category</p>
                            <h5 class="card-title">@title</h5>
                            <p class="card-text">@preamble</p>
                            <div class="article-date">
                                <div class="content">
                                    <h5 class="day">@date.ToString("dd")</h5>
                                    <p class="month">@date.ToString("MMM")</p>
                                </div>
                            </div>
                        </div>
                    </a>

                }
            }   
            </div>

            <nav class="item-pagination" aria-label="Page navigation">
                @if(pageNumber > 1)
                {
                    <a href="?page=@(pageNumber - 1)" class="item-link" aria-label="Previous">
                        <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-left"></i></span>
                    </a>
                }

                @for( int i=1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                {
                    @if(i == pageNumber)
                    {
                    <a href="#" class="item-link active">@i</a>
                    }
                    else
                    {
                        <a href="?page=@i" class="item-link ">@i</a>
                    }
                }

                @if(pageNumber < Math.Ceiling((decimal)totalItems / itemsPerPage))
                {
                    <a href="?page=@(pageNumber + 1)" class="item-link" aria-label="Next">
                        <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-right"></i></span>
                    </a>
                }


            </nav>
        </div>
    </section>
    
    @await Html.PartialAsync("_SubscribeSection")